apiVersion: apps/v1
kind: Deployment
metadata:
  name: simplefastapiapp
  namespace: application
  labels:
    app: simplefastapiapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simplefastapiapp
  template:
    metadata:
      name: simplefastapiapp
      labels:
        app: simplefastapiapp
#      annotations:
#        prometheus.io/scrape: "true"
#        prometheus.io/path: "/metrics"
#        prometheus.io/port: "8000"
#        opentelemetry.io/traced: "true"
    spec:
      containers:
        - name: simplefastapiapp
          image: harbor.devgauss.com/fastapi/simplefastapiapp:39
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            # Application settings
            - name: ENVIRONMENT
              value: "development"
            - name: DEBUG
              value: "false"
            - name: LOG_LEVEL
              value: "INFO"
            - name: CORS_ORIGINS
              value: '["*"]'

            # OpenTelemetry settings
            - name: OTLP_ENDPOINT
              value: "http://alloy-traces.alloy-traces.svc.cluster.local:4317"
            - name: OTEL_SERVICE_NAME
              value: "simplefastapiapp"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"

            # Database settings
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: host
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: dbname
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: port

            # Redis settings
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
            - name: REDIS_DB
              value: "0"
            - name: REDIS_TTL
              value: "300"
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
      serviceAccountName: application
